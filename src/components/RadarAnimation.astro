<style type="text/css">
    #radar-container {
      width:256px;
      height:256px;
      background: black;
      margin-bottom:40px;
    }
 </style>

<div id="radar-container"></div>

<script>
  function createRadar({ containerId, width = 100, height = 100, blips = [] }) {
  const canvas = document.createElement("canvas");
  canvas.width = width;
  canvas.height = height;
  canvas.style.background = "black";
  canvas.style.display = "block";
  const container = document.getElementById(containerId);
  if (!container) {
    console.error("Radar container not found:", containerId);
    return;
  }
  container.appendChild(canvas);

  const ctx = canvas.getContext("2d");
  const cx = width / 2;
  const cy = height / 2;
  const radius = Math.min(cx, cy) - 2;
  let angle = 0;

  const localBlips = blips.map(b => ({ ...b, intensity: 0 }));

  function drawRadarBackground() {
    ctx.clearRect(0, 0, width, height);
    ctx.strokeStyle = "lime";
    ctx.lineWidth = 1.2;

    for (let i = 1; i <= 2; i++) {
      ctx.beginPath();
      ctx.arc(cx, cy, (radius / 2) * i, 0, Math.PI * 2);
      ctx.stroke();
    }

    ctx.beginPath();
    ctx.moveTo(cx - radius, cy);
    ctx.lineTo(cx + radius, cy);
    ctx.stroke();

    ctx.beginPath();
    ctx.moveTo(cx, cy - radius);
    ctx.lineTo(cx, cy + radius);
    ctx.stroke();
  }

  function drawSweepArm(a) {
    ctx.save();
    ctx.translate(cx, cy);
    ctx.rotate(a);

    ctx.strokeStyle = "lime";
    ctx.lineWidth = 2;
    ctx.beginPath();
    ctx.moveTo(0, 0);
    ctx.lineTo(radius, 0);
    ctx.stroke();

    ctx.restore();
  }

  function drawBlips(a) {
    ctx.save();
    ctx.translate(cx, cy);

    localBlips.forEach((blip) => {
      const bx = blip.x;
      const by = blip.y;
      const angleToBlip = Math.atan2(by, bx);
      const diff = Math.abs(((a - angleToBlip + Math.PI * 2) % (Math.PI * 2)));

      if (diff < 0.1) {
        blip.intensity = 1.0;
      } else {
        blip.intensity = Math.max(0, blip.intensity - 0.02);
      }

      if (blip.intensity > 0) {
        ctx.beginPath();
        ctx.fillStyle = `rgba(0,255,0,${blip.intensity})`;
        ctx.arc(bx, by, 2 + blip.intensity * 1.5, 0, Math.PI * 2);
        ctx.fill();
      }
    });
    ctx.restore();
  }

  function animate() {
    drawRadarBackground();
    drawSweepArm(angle);
    drawBlips(angle);
    angle += 0.01;
    requestAnimationFrame(animate);
  }
  animate();
}

createRadar({
  containerId: "radar-container",
  width: 256,
  height: 256,
  blips: [
    { x: 15, y: 10 },
    { x: -10, y: 20 },
    { x: 5, y: -18 },
  ],
});
</script>